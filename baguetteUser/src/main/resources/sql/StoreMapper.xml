<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StoreMapper">
 	
 	
	<resultMap id="storeSelectMap" type="store">
		<result property="storeNo" 		column="sno" 		jdbcType="NUMERIC"/>
		<result property="storeName"	column="sname" 		jdbcType="VARCHAR" />
		<result property="storeAddr" 	column="saddr" 		jdbcType="VARCHAR" />
		<result property="storeTel" 	column="stel" 		jdbcType="VARCHAR" />
		<result property="storeTime" 	column="stime" 		jdbcType="VARCHAR" />
		<result property="storeImg" 	column="simg" 		jdbcType="VARCHAR" />
		<result property="storeInfo" 	column="sinfo" 		jdbcType="CLOB" />
		<result property="storeLat" 	column="slat" 		jdbcType="DOUBLE"/>
		<result property="storeLng" 	column="slng" 		jdbcType="DOUBLE"/>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addStore"	parameterType="store" >
	 	INSERT
		INTO users( sno, sname, saddr, stel, stime, stimg, sinfo) 
		VALUES	 (	seq_store_no.NETVAL , #{storeName} , #{storeAddr} , #{storeTel} , #{storeTime} , 
							#{#{storeImg} , #{storeInfo})
	</insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getStoreByNo"	parameterType="int"		resultMap="storeSelectMap">
		SELECT
		sno, sname, saddr, stel, stime, simg, sinfo
		FROM store
		WHERE sno = #{value}
	 </select>
	 <select 	id="getStoreByName"	parameterType="string"	resultMap="storeSelectMap">
		SELECT
		sno, sname, saddr, stel, stime, simg, sinfo
		FROM store
		WHERE sname = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	<!--  <update	id="updateUser"	parameterType="user" >
	   	UPDATE users
	   	<set>
	   		user_name 	= #{userName} ,
			cell_phone	= #{phone},
			addr 				= #{addr} ,
			email				=	#{email}
	   	</set>
	   	WHERE user_id = #{userId}
	 </update>-->
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getStoreList"  parameterType="string"	resultMap="storeSelectMap">
		SELECT sno , sname, saddr, stel, simg, sinfo, slat, slng
		FROM store
		<where>
		saddr Like '%${value}%'
		</where>
		ORDER BY sno  
	 </select>
	 <select  id="getStoreListShort"  parameterType="string"	resultMap="storeSelectMap">
		SELECT sno , sname, SUBSTRING_INDEX(saddr,' ',2) saddr, simg
		FROM store
		<where>
		saddr Like '%${value}%'
		</where>
		ORDER BY sno  
	 </select>
	 <!-- <select  id="getStoreList"  parameterType="string"	resultMap="storeSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT sno , sname, saddr, simg
											FROM store
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				saddr Like '%${value}%'
													</if>
												</where>
											</if>
											ORDER BY sno ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select> -->
	 	<!-- 위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		
	
	SQL : SELECT ROW Count	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT user_id , user_name , email
						FROM users
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			user_id Like '%${searchKeyword}%'
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		user_name Like '%${searchKeyword}%'
								</if>
							</where>
						</if> ) countTable						
	 </select>
	  -->
</mapper>